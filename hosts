#!/usr/bin/env python
#!-*-coding:utf-8-*-

import os, sys, shutil

HOSTS = "/etc/hosts"
TMPHOSTS = "/tmp/hosts"

def createTmpFile():
    os.system("touch "+TMPHOSTS)	

def moveHosts():
    try:
        shutil.move(TMPHOSTS, HOSTS)
    except IOError:
        print "hosts: utilize SUDO para realizar esta ação. Somente a ação de LISTAR (-l) pode ser realizada sem permissão de superusuário."

def addHosts(url):
    createTmpFile()
    if "www." in url:
        url += " "+url[4:]
    else:
        url = "www."+url+" "+url
    with open(HOSTS, "r") as f:
        lines = f.readlines()
        with open(TMPHOSTS, "w") as output:
            for line in lines:            
                output.write(line)
            output.write("127.0.0.1 "+ url + "\n")
        output.close()
    f.close()
    moveHosts()

def removeHosts(url):
    createTmpFile()
    with open(HOSTS, "r") as f:
        lines = f.readlines()
        with open(TMPHOSTS, "w") as output:
            for line in lines:
                if url not in line:
                    output.write(line)
        output.close()
    f.close()
    moveHosts()

def commentHosts(url):
    createTmpFile()
    with open(HOSTS, "r") as f:
        lines = f.readlines()
        with open(TMPHOSTS, "w") as output:
            for line in lines:
                if url in line and "#" not in line[0]:
                    output.write("#"+line)
                else:
                    output.write(line)
        output.close()
    f.close()
    moveHosts()

def uncommentHosts(url):
    createTmpFile()
    with open(HOSTS, "r") as f:
        lines = f.readlines()
        with open(TMPHOSTS, "w") as output:
            for line in lines:
                if url in line and "#" in line[0]:
                    output.write(line[1:])
                else:
                    output.write(line)
        output.close()
    f.close()
    moveHosts()

def listHosts():
    with open(HOSTS, "r") as f:
        content = f.read()
    f.close()
    print "==================== Hosts ===================="
    print content
    print "====================  Fim  ===================="
    
def main(mode, url):
    known_modes = {
        "-a":addHosts,
        "-r":removeHosts,
        "-c":commentHosts,
        "-u":uncommentHosts,
        "-l":listHosts
    }

    status = None

    with open(HOSTS, "r") as f:
        lines = f.readlines()
        for line in lines:
            if "-a" in mode and url in line:
                status = "hosts: esta URL já existe no arquivo."
            elif "-c" in mode and "#" in line and url in line:
                status = "hosts: esta URL já está comentada."
            elif "-u" in mode and "#" not in line and url in line:
                status = "hosts: esta URL não está comentada."
            elif "-r" in mode and url not in line:
                status = "hosts: esta URL não existe no arquivo."
            else:
                status = None
    f.close()

    if status:
        print status
        sys.exit()

    if mode in known_modes:
        if "-l" in mode:
            known_modes[mode]()
        else:
            known_modes[mode](url)
    else:
        help = ["===================== Uso =====================",
                "\n1) Para ações que manipulam o arquivo:",
                "\n\t$ sudo hosts [AÇÃO] [URL ou Parte da URL]",
                "\n\tOnde [AÇÃO] pode ser:",
                "\n\t    '-a': Adiciona uma URL", "\t    '-r': Remove uma URL",
                "\t    '-c': Comenta uma URL", "\t    '-u': Descomenta uma URL",
                "\n\tO único comando que exige a URL completa é o comando '-a'.",
                "\tOs outros comandos pode ser usados com apenas um trecho da URL:",
                "\n\t    $ sudo hosts -a www.myurl.com",
                "\t    $ sudo hosts -c myurl",
                "\n\tIMPORTANTE: Ao adicionar uma URL com '-a', o programa",
                "\t\t    automaticamente adiciona a URL com e sem 'www'.",
                "\t\t    Apenas digite uma das duas, que o programa se",
                "\t\t    encarrega do resto. =)",
                "\n2) Para listar o conteúdo do arquivo:",
                "\n\t$ hosts -l",
                "\n===================== Fim ====================="]

        for line in help:
            print line

if len(sys.argv) <= 2:
    mode = sys.argv[1]
    url = ""
else:
    mode = sys.argv[1]
    url = sys.argv[2]

main(mode, url)

